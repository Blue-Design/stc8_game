C51 COMPILER V9.60.0.0   KEYBOARD                                                          01/08/2021 19:05:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN .\Out_File\keyboard.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\Device\keyboard.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Device;..\
                    -Libraries;..\User) DEBUG OBJECTEXTEND PRINT(.\keyboard.lst) OBJECT(.\Out_File\keyboard.obj)

line level    source

   1          #include "keyboard.h"
   2          
   3          /*****************************************************
   4              行列键扫描程序
   5              使用XY查找4x4键的方法，只能单键，速度快
   6          
   7             Y     P74      P75      P76      P77
   8                    |        |        |        |
   9          X         |        |        |        |
  10          P70 ---- K00 ---- K01 ---- K02 ---- K03 ----
  11                    |        |        |        |
  12          P71 ---- K04 ---- K05 ---- K06 ---- K07 ----
  13                    |        |        |        |
  14          P72 ---- K08 ---- K09 ---- K10 ---- K11 ----
  15                    |        |        |        |
  16          P73 ---- K12 ---- K13 ---- K14 ---- K15 ----
  17                    |        |        |        |
  18          ******************************************************/
  19          uint8 KeyCode;
  20          uint8 IO_KeyState, IO_KeyState1, IO_KeyHoldCnt;
  21          uint8 code T_KeyTable[16] = {0,1,2,0,3,0,0,0,4,0,0,0,0,0,0,0};
  22          uint8 KEY_MAP[17] = {0, '+', 9, 8, 7, '-', 6, 5, 4, 'x', 3, 2, 1, '/', '#', 0, '*'};
  23          
  24          void IO_KeyScan(void){    //50ms call
  25   1          uint8 i, j;
  26   1      
  27   1          j = IO_KeyState1;   //保存上一次状态
  28   1      
  29   1          P7 = 0xf0;  //X低，读Y
  30   1          i = 60;
  31   1          while(--i);
  32   1          IO_KeyState1 = P7 & 0xf0;
  33   1      
  34   1          P7 = 0x0f;  //Y低，读X
  35   1          i = 60;
  36   1          while(--i);
  37   1          IO_KeyState1 |= (P7 & 0x0f);
  38   1          
  39   1          IO_KeyState1 ^= 0xff;   //取反
  40   1          
  41   1          if(j == IO_KeyState1){   //连续两次读相等
  42   2              j = IO_KeyState;
  43   2              IO_KeyState = IO_KeyState1;
  44   2              if(IO_KeyState != 0){    //有键按下
  45   3                  F0 = 0;
  46   3                  if(j == 0)  F0 = 1; //第一次按下
  47   3                  else if(j == IO_KeyState){
  48   4                      if(++IO_KeyHoldCnt >= 20){   //1秒后重键
  49   5                          IO_KeyHoldCnt = 18;
  50   5                          F0 = 1;
  51   5                      }
  52   4                  }
  53   3                  if(F0){
  54   4                      j = T_KeyTable[IO_KeyState >> 4];
C51 COMPILER V9.60.0.0   KEYBOARD                                                          01/08/2021 19:05:39 PAGE 2   

  55   4                      if((j != 0) && (T_KeyTable[IO_KeyState & 0x0f] != 0)) 
  56   4                          KeyCode = (j - 1) * 4 + T_KeyTable[IO_KeyState & 0x0f];    //计算键码，1~16
  57   4                  }
  58   3              }else IO_KeyHoldCnt = 0;
  59   2          }
  60   1          P7 = 0xff;
  61   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    146    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =     21    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
