C51 COMPILER V9.60.0.0   PCF8563                                                           01/08/2021 01:48:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PCF8563
OBJECT MODULE PLACED IN .\Out_File\pcf8563.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\Device\pcf8563.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Device;..\L
                    -ibraries) DEBUG OBJECTEXTEND PRINT(.\pcf8563.lst) OBJECT(.\Out_File\pcf8563.obj)

line level    source

   1          #include "pcf8563.h"
   2          
   3          //========================================================================
   4          // 描述: 写多个字节数据.
   5          // 参数: addr:写入的寄存器地址; p:写入的数据; number:需要写的数据个数.
   6          // 返回: none.
   7          //========================================================================
   8          void pcf8563_write_nbyte(uint8 addr, uint8 *p, uint8 number)
   9          {
  10   1          hardiic_start();                        //开始信号
  11   1          hardiic_send_byte(PCF8563_ADDR_W);      //发送器件写地址
  12   1          hardiic_wait_ack();
  13   1          hardiic_send_byte(addr);                //发送寄存器地址
  14   1          hardiic_wait_ack();
  15   1          do
  16   1          {
  17   2              hardiic_send_byte(*p++);             //发送数据
  18   2              hardiic_wait_ack();
  19   2          }while(--number);
  20   1          hardiic_stop();                          //发送停止命令
  21   1      }
  22          
  23          //========================================================================
  24          // 描述: 读取多个数据.
  25          // 参数: addr:读取的寄存器地址; p:读回来的数据; number:需要读的数据个数.
  26          // 返回: none.
  27          //========================================================================
  28          void pcf8563_read_nbyte(uint8 addr, uint8 *p, uint8 number)
  29          {
  30   1          hardiic_start();                        //开始信号
  31   1          hardiic_send_byte(PCF8563_ADDR_W);      //发送器件写地址
  32   1          hardiic_wait_ack();
  33   1          hardiic_send_byte(addr);                //发送寄存器地址
  34   1          hardiic_wait_ack();
  35   1      
  36   1          hardiic_start();                        //重复开始信号
  37   1          hardiic_send_byte(PCF8563_ADDR_W | 0x01);      //发送器件读地址
  38   1          hardiic_wait_ack(); 
  39   1          do
  40   1          {
  41   2              *p = hardiic_read_byte();
  42   2              p++;
  43   2              if(number != 1) hardiic_ack();     
  44   2      
  45   2          }while(--number);
  46   1          hardiic_nack(); 
  47   1          hardiic_stop();
  48   1      }
  49          
  50          //========================================================================
  51          // 描述: 初始化.
  52          // 参数: none.
  53          // 返回: none.
  54          //========================================================================
C51 COMPILER V9.60.0.0   PCF8563                                                           01/08/2021 01:48:40 PAGE 2   

  55          void pcf8563_init()
  56          {
  57   1          uint8 vlaue = 0;
  58   1          hardiic_init();
  59   1          pcf8563_write_nbyte(0,&vlaue,1);
  60   1      }
  61          
  62          //========================================================================
  63          // 描述: 根据年月日获取星期.
  64          // 参数: 年月日.
  65          // 返回: none.
  66          //========================================================================
  67          uint8 get_weekday(uint16 year,uint8 month, uint8 day)
  68          {
  69   1          int c,y,w;
  70   1          uint8 dow;
  71   1              int m = month;
  72   1          int d = day;  // 根据月份对年份和月份进行调整
  73   1          if(m <= 2)
  74   1          {
  75   2              year -= 1;
  76   2              m += 12;
  77   2          }
  78   1          c =year / 100; // 取得年份前两位
  79   1          y =year % 100; // 取得年份后两位
  80   1          w = (int)(c/4) - 2*c + y + (int)(y/4) + (int)(13*(m+1)/5) + d - 1;   // 根据泰勒公式计算星期
  81   1          if((w%7)==0){
  82   2             dow=7;
  83   2          }else{
  84   2            dow=w%7;
  85   2          }
  86   1          return dow;
  87   1      }
  88          
  89          //========================================================================
  90          // 描述: 读取rtc数据.
  91          // 参数: none.
  92          // 返回: none.
  93          //========================================================================
  94          void pcf8563_read_rtc(pcf8563_Time *tim)
  95          {
  96   1          uint8  tmp[7];
  97   1      
  98   1          pcf8563_read_nbyte(2, tmp, 7);
  99   1      
 100   1          tim->second = ((tmp[0] >> 4) & 0x07) * 10 + (tmp[0] & 0x0f);    //秒钟
 101   1          tim->minute = ((tmp[1] >> 4) & 0x07) * 10 + (tmp[1] & 0x0f);    //分钟
 102   1          tim->hour   = ((tmp[2] >> 4) & 0x03) * 10 + (tmp[2] & 0x0f);    //小时
 103   1      
 104   1          tim->day = ((tmp[3] >> 4) & 0x07) * 10 + (tmp[3] & 0x0f);                //日
 105   1          tim->weekday = tmp[4] + 1;                                          //星期
 106   1          tim->month = ((tmp[5] >> 4) & 0x07) * 10 + (tmp[5] & 0x0f);              //月
 107   1          tim->year = 2000 + ((tmp[6] >> 4) & 0x07) * 10 + (tmp[6] & 0x0f);        //年
 108   1      }
 109          
 110          //========================================================================
 111          // 描述: 写rtc数据.
 112          // 参数: 年，月，日，星期，时，分，秒.
 113          // 返回: none.
 114          //========================================================================
 115          void pcf8563_write_rtc(pcf8563_Time *tim)
 116          {
C51 COMPILER V9.60.0.0   PCF8563                                                           01/08/2021 01:48:40 PAGE 3   

 117   1          uint8  tmp[7];
 118   1          tim->year = tim->year - 2000;
 119   1      
 120   1          tmp[0] = ((tim->second / 10) << 4) + (tim->second % 10);      //秒
 121   1          tmp[1] = ((tim->minute / 10) << 4) + (tim->minute % 10);      //分
 122   1          tmp[2] = ((tim->hour / 10) << 4) + (tim->hour % 10);          //小时
 123   1      
 124   1          tmp[3] = ((tim->day / 10) << 4) + (tim->day % 10);            //日
 125   1          tmp[4] = tim->weekday - 1;                                    //星期
 126   1          tmp[5] = ((tim->month / 10) << 4) + (tim->month % 10);        //月
 127   1          tmp[6] = ((tim->year / 10) << 4) + (tim->year % 10);          //年
 128   1      
 129   1          pcf8563_write_nbyte(2, tmp, 7);
 130   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    881    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      38
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
