C51 COMPILER V9.60.0.0   GPIO                                                              01/08/2021 19:05:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Out_File\GPIO.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\Device\GPIO.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Device;..\Libr
                    -aries;..\User) DEBUG OBJECTEXTEND PRINT(.\GPIO.lst) OBJECT(.\Out_File\GPIO.obj)

line level    source

   1          #include "GPIO.h"
   2          
   3          //--------------------------------------------------------------------------------------------------------
             ------------
   4          //  @brief      GPIO设置引脚上拉电阻设置
   5          //  @param      pin         选择引脚（P00-P77）
   6          //  @param      pull        设置上下拉电阻 NOPULL:不设置 PULL4k:上拉
   7          //  @return     void
   8          //  Sample usage:           gpio_pull_set(P00,NOPULL);       // 设置P0.0引脚没有上下拉电阻
   9          //--------------------------------------------------------------------------------------------------------
             ------------
  10          void pullMode(PIN_name pin, PULLUP pull)
  11          {
  12   1              if (PULL4k == pull)
  13   1              {
  14   2                      (*(unsigned char volatile xdata*)(PxPU_BASE_ADDR + (pin >> 4))) |= (1 << (pin & 0x0F));
  15   2              }
  16   1              else if (NOPULL == pull)
  17   1              {
  18   2                      (*(unsigned char volatile xdata*)(PxPU_BASE_ADDR + (pin >> 4))) &= ~(1 << (pin & 0x0F));
  19   2              }
  20   1      }
  21          
  22          
  23          
  24          //--------------------------------------------------------------------------------------------------------
             ------------
  25          //  @brief      GPIO设置引脚模式
  26          //  @param      pin         选择引脚（P0_0-P5_4）
  27          //  @param      mode        引脚模式 GPIO:准双向口, GPIO_PP:推挽输出, INPUT:高阻输入, GPIO_OD:开漏输出
  28          //  @return     void
  29          //  Sample usage:           pinMode(P00,GPIO);       // 设置P0.0设置为双向IO
  30          //--------------------------------------------------------------------------------------------------------
             ------------
  31          void pinMode(PIN_name pin, GPIOMODE mode)
  32          {
  33   1              if (GPIO == mode)
  34   1              {
  35   2                      if (0x00 == (pin & 0xF0))       //P0
  36   2                      {
  37   3                              P0M1 &= ~(1 << (pin & 0xF));
  38   3                              P0M0 &= ~(1 << (pin & 0xF));
  39   3                      }
  40   2                      if (0x10 == (pin & 0xF0))       //P1
  41   2                      {
  42   3                              P1M1 &= ~(1 << (pin & 0xF));
  43   3                              P1M0 &= ~(1 << (pin & 0xF));
  44   3                      }
  45   2                      if (0x20 == (pin & 0xF0))       //P2
  46   2                      {
  47   3                              P2M1 &= ~(1 << (pin & 0xF));
  48   3                              P2M0 &= ~(1 << (pin & 0xF));
  49   3                      }
  50   2      
C51 COMPILER V9.60.0.0   GPIO                                                              01/08/2021 19:05:40 PAGE 2   

  51   2                      if (0x30 == (pin & 0xF0))       //P3
  52   2                      {
  53   3                              P3M1 &= ~(1 << (pin & 0xF));
  54   3                              P3M0 &= ~(1 << (pin & 0xF));
  55   3                      }
  56   2                      if (0x40 == (pin & 0xF0))       //P4
  57   2                      {
  58   3                              P4M1 &= ~(1 << (pin & 0xF));
  59   3                              P4M0 &= ~(1 << (pin & 0xF));
  60   3                      }
  61   2                      if (0x50 == (pin & 0xF0))       //P5
  62   2                      {
  63   3                              P5M1 &= ~(1 << (pin & 0xF));
  64   3                              P5M0 &= ~(1 << (pin & 0xF));
  65   3                      }
  66   2              }
  67   1              else if (GPIO_PP == mode)
  68   1              {
  69   2                      if (0x00 == (pin & 0xF0))       //P0
  70   2                      {
  71   3                              P0M1 &= ~(1 << (pin & 0xF));
  72   3                              P0M0 |= (1 << (pin & 0xF));
  73   3                      }
  74   2                      if (0x10 == (pin & 0xF0))       //P1
  75   2                      {
  76   3                              P1M1 &= ~(1 << (pin & 0xF));
  77   3                              P1M0 |= (1 << (pin & 0xF));
  78   3                      }
  79   2                      if (0x20 == (pin & 0xF0))       //P2
  80   2                      {
  81   3                              P2M1 &= ~(1 << (pin & 0xF));
  82   3                              P2M0 |= (1 << (pin & 0xF));
  83   3                      }
  84   2      
  85   2                      if (0x30 == (pin & 0xF0))       //P3
  86   2                      {
  87   3                              P3M1 &= ~(1 << (pin & 0xF));
  88   3                              P3M0 |= (1 << (pin & 0xF));
  89   3                      }
  90   2                      if (0x40 == (pin & 0xF0))       //P4
  91   2                      {
  92   3                              P4M1 &= ~(1 << (pin & 0xF));
  93   3                              P4M0 |= (1 << (pin & 0xF));
  94   3                      }
  95   2                      if (0x50 == (pin & 0xF0))       //P5
  96   2                      {
  97   3                              P5M1 &= ~(1 << (pin & 0xF));
  98   3                              P5M0 |= (1 << (pin & 0xF));
  99   3                      }
 100   2              }
 101   1              else if (INPUT == mode)
 102   1              {
 103   2                      if (0x00 == (pin & 0xF0))       //P0
 104   2                      {
 105   3                              P0M1 |= (1 << (pin & 0xF));
 106   3                              P0M0 &= ~(1 << (pin & 0xF));
 107   3                      }
 108   2                      if (0x10 == (pin & 0xF0))       //P1
 109   2                      {
 110   3                              P1M1 |= (1 << (pin & 0xF));
 111   3                              P1M0 &= ~(1 << (pin & 0xF));
 112   3                      }
C51 COMPILER V9.60.0.0   GPIO                                                              01/08/2021 19:05:40 PAGE 3   

 113   2                      if (0x20 == (pin & 0xF0))       //P2
 114   2                      {
 115   3                              P2M1 |= (1 << (pin & 0xF));
 116   3                              P2M0 &= ~(1 << (pin & 0xF));
 117   3                      }
 118   2      
 119   2                      if (0x30 == (pin & 0xF0))       //P3
 120   2                      {
 121   3                              P3M1 |= (1 << (pin & 0xF));
 122   3                              P3M0 &= ~(1 << (pin & 0xF));
 123   3                      }
 124   2                      if (0x40 == (pin & 0xF0))       //P4
 125   2                      {
 126   3                              P4M1 |= (1 << (pin & 0xF));
 127   3                              P4M0 &= ~(1 << (pin & 0xF));
 128   3                      }
 129   2                      if (0x50 == (pin & 0xF0))       //P5
 130   2                      {
 131   3                              P5M1 |= (1 << (pin & 0xF));
 132   3                              P5M0 &= ~(1 << (pin & 0xF));
 133   3                      }
 134   2              }
 135   1              else if (GPIO_OD == mode)
 136   1              {
 137   2                      if (0x00 == (pin & 0xF0))       //P0
 138   2                      {
 139   3                              P0M1 |= (1 << (pin & 0xF));
 140   3                              P0M0 |= (1 << (pin & 0xF));
 141   3                      }
 142   2                      if (0x10 == (pin & 0xF0))       //P1
 143   2                      {
 144   3                              P1M1 |= (1 << (pin & 0xF));
 145   3                              P1M0 |= (1 << (pin & 0xF));
 146   3                      }
 147   2                      if (0x20 == (pin & 0xF0))       //P2
 148   2                      {
 149   3                              P2M1 |= (1 << (pin & 0xF));
 150   3                              P2M0 |= (1 << (pin & 0xF));
 151   3                      }
 152   2      
 153   2                      if (0x30 == (pin & 0xF0))       //P3
 154   2                      {
 155   3                              P3M1 |= (1 << (pin & 0xF));
 156   3                              P3M0 |= (1 << (pin & 0xF));
 157   3                      }
 158   2                      if (0x40 == (pin & 0xF0))       //P4
 159   2                      {
 160   3                              P4M1 |= (1 << (pin & 0xF));
 161   3                              P4M0 |= (1 << (pin & 0xF));
 162   3                      }
 163   2                      if (0x50 == (pin & 0xF0))       //P5
 164   2                      {
 165   3                              P5M1 |= (1 << (pin & 0xF));
 166   3                              P5M0 |= (1 << (pin & 0xF));
 167   3                      }
 168   2              }
 169   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    780    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.0.0   GPIO                                                              01/08/2021 19:05:40 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
