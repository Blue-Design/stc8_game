C51 COMPILER V9.60.0.0   PWM                                                               01/08/2021 01:23:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Out_File\PWM.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\Device\PWM.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Device;..\Libra
                    -ries) DEBUG OBJECTEXTEND PRINT(.\PWM.lst) OBJECT(.\Out_File\PWM.obj)

line level    source

   1          #include "PWM.h"
   2          
   3          //--------------------------------------------------------------------------------------------------------
             ------------
   4          //  @brief      PWM_gpio≈‰÷√
   5          //  @param      pwmch       PWMÕ®µ¿
   6          //  @return     void
   7          //  Sample usage:           
   8          //--------------------------------------------------------------------------------------------------------
             ------------
   9          void pwm_set_gpio(PWM_CH pwmch)
  10          {
  11   1              switch (pwmch)
  12   1              {
  13   2                      case PWM1P_P10:
  14   2                      {
  15   3                              pinMode(P1_0, GPIO_PP);
  16   3                              break;
  17   3                      }
  18   2                      case PWM1N_P11:
  19   2                      {
  20   3                              pinMode(P1_1, GPIO_PP);
  21   3                              break;
  22   3                      }
  23   2                      case PWM1P_P20:
  24   2                      {
  25   3                              pinMode(P2_0, GPIO_PP);
  26   3                              break;
  27   3                      }
  28   2                      case PWM1N_P21:
  29   2                      {
  30   3                              pinMode(P2_1, GPIO_PP);
  31   3                              break;
  32   3                      }
  33   2                      case PWM1P_P60:
  34   2                      {
  35   3                              pinMode(P6_0, GPIO_PP);
  36   3                              break;
  37   3                      }
  38   2                      case PWM1N_P61:
  39   2                      {
  40   3                              pinMode(P6_1, GPIO_PP);
  41   3                              break;
  42   3                      }
  43   2      
  44   2                      case PWM2P_P12:
  45   2                      {
  46   3                              pinMode(P1_2, GPIO_PP);
  47   3                              break;
  48   3                      }
  49   2                      case PWM2N_P13:
  50   2                      {
  51   3                              pinMode(P1_3, GPIO_PP);
  52   3                              break;
C51 COMPILER V9.60.0.0   PWM                                                               01/08/2021 01:23:28 PAGE 2   

  53   3                      }
  54   2                      case PWM2P_P22:
  55   2                      {
  56   3                              pinMode(P2_2, GPIO_PP);
  57   3                              break;
  58   3                      }
  59   2                      case PWM2N_P23:
  60   2                      {
  61   3                              pinMode(P2_3, GPIO_PP);
  62   3                              break;
  63   3                      }
  64   2                      case PWM2P_P62:
  65   2                      {
  66   3                              pinMode(P6_2, GPIO_PP);
  67   3                              break;
  68   3                      }
  69   2                      case PWM2N_P63:
  70   2                      {
  71   3                              pinMode(P6_3, GPIO_PP);
  72   3                              break;
  73   3                      }
  74   2      
  75   2                      case PWM3P_P14:
  76   2                      {
  77   3                              pinMode(P1_4, GPIO_PP);
  78   3                              break;
  79   3                      }
  80   2                      case PWM3N_P15:
  81   2                      {
  82   3                              pinMode(P1_5, GPIO_PP);
  83   3                              break;
  84   3                      }
  85   2                      case PWM3P_P24:
  86   2                      {
  87   3                              pinMode(P2_4, GPIO_PP);
  88   3                              break;
  89   3                      }
  90   2                      case PWM3N_P25:
  91   2                      {
  92   3                              pinMode(P2_5, GPIO_PP);
  93   3                              break;
  94   3                      }
  95   2                      case PWM3P_P64:
  96   2                      {
  97   3                              pinMode(P6_4, GPIO_PP);
  98   3                              break;
  99   3                      }
 100   2                      case PWM3N_P65:
 101   2                      {
 102   3                              pinMode(P6_5, GPIO_PP);
 103   3                              break;
 104   3                      }
 105   2                      case PWM4P_P16:
 106   2                      {
 107   3                              pinMode(P1_6, GPIO_PP);
 108   3                              break;
 109   3                      }
 110   2                      case PWM4N_P17:
 111   2                      {
 112   3                              pinMode(P1_7, GPIO_PP);
 113   3                              break;
 114   3                      }
C51 COMPILER V9.60.0.0   PWM                                                               01/08/2021 01:23:28 PAGE 3   

 115   2                      case PWM4P_P26:
 116   2                      {
 117   3                              pinMode(P2_6, GPIO_PP);
 118   3                              break;
 119   3                      }
 120   2                      case PWM4N_P27:
 121   2                      {
 122   3                              pinMode(P2_7, GPIO_PP);
 123   3                              break;
 124   3                      }
 125   2                      case PWM4P_P66:
 126   2                      {
 127   3                              pinMode(P6_6, GPIO_PP);
 128   3                              break;
 129   3                      }
 130   2                      case PWM4N_P67:
 131   2                      {
 132   3                              pinMode(P6_7, GPIO_PP);
 133   3                              break;
 134   3                      }
 135   2                      case PWM4P_P34:
 136   2                      {
 137   3                              pinMode(P3_4, GPIO_PP);
 138   3                              break;
 139   3                      }
 140   2                      case PWM4N_P33:
 141   2                      {
 142   3                              pinMode(P3_3, GPIO_PP);
 143   3                              break;
 144   3                      }
 145   2                      case PWM5_P20:
 146   2                      {
 147   3                              pinMode(P2_0, GPIO_PP);
 148   3                              break;
 149   3                      }
 150   2                      case PWM5_P17:
 151   2                      {
 152   3                              pinMode(P1_7, GPIO_PP);
 153   3                              break;
 154   3                      }
 155   2                      case PWM5_P00:
 156   2                      {
 157   3                              pinMode(P0_0, GPIO_PP);
 158   3                              break;
 159   3                      }
 160   2                      case PWM5_P74:
 161   2                      {
 162   3                              pinMode(P7_4, GPIO_PP);
 163   3                              break;
 164   3                      }
 165   2                      case PWM6_P21:
 166   2                      {
 167   3                              pinMode(P2_1, GPIO_PP);
 168   3                              break;
 169   3                      }
 170   2                      case PWM6_P54:
 171   2                      {
 172   3                              pinMode(P5_4, GPIO_PP);
 173   3                              break;
 174   3                      }
 175   2                      case PWM6_P01:
 176   2                      {
C51 COMPILER V9.60.0.0   PWM                                                               01/08/2021 01:23:28 PAGE 4   

 177   3                              pinMode(P0_1, GPIO_PP);
 178   3                              break;
 179   3                      }
 180   2                      case PWM6_P75:
 181   2                      {
 182   3                              pinMode(P7_5, GPIO_PP);
 183   3                              break;
 184   3                      }
 185   2                      case PWM7_P22:
 186   2                      {
 187   3                              pinMode(P2_2, GPIO_PP);
 188   3                              break;
 189   3                      }
 190   2                      case PWM7_P33:
 191   2                      {
 192   3                              pinMode(P3_3, GPIO_PP);
 193   3                              break;
 194   3                      }
 195   2                      case PWM7_P02:
 196   2                      {
 197   3                              pinMode(P0_2, GPIO_PP);
 198   3                              break;
 199   3                      }
 200   2                      case PWM7_P76:
 201   2                      {
 202   3                              pinMode(P7_6, GPIO_PP);
 203   3                              break;
 204   3                      }
 205   2                      case PWM8_P23:
 206   2                      {
 207   3                              pinMode(P2_3, GPIO_PP);
 208   3                              break;
 209   3                      }
 210   2                      case PWM8_P34:
 211   2                      {
 212   3                              pinMode(P3_4, GPIO_PP);
 213   3                              break;
 214   3                      }
 215   2                      case PWM8_P03:
 216   2                      {
 217   3                              pinMode(P0_3, GPIO_PP);
 218   3                              break;
 219   3                      }
 220   2                      case PWM8_P77:
 221   2                      {
 222   3                              pinMode(P7_7, GPIO_PP);
 223   3                              break;
 224   3                      }
 225   2              }
 226   1      }
 227          
 228          
 229          //--------------------------------------------------------------------------------------------------------
             ------------
 230          //  @brief      PWM≥ı ºªØ
 231          //  @param      pwmch       PWMÕ®µ¿
 232          //  @param      freq        PWM∆µ¬ 64Hz-3MHz)
 233          //  @param      duty        PWM’ºø’±»
 234          //  @return     void
 235          //  Sample usage:           
 236          //                                                      pwm_init(PWM0_P00, 100, 5000);     //Õ®µ¿PWM0  “˝Ω≈P0.0  ∆µ¬ 100  ’ºø’±»5000
 237          //                                                      PWM_DUTY_MAXŒ™10000
C51 COMPILER V9.60.0.0   PWM                                                               01/08/2021 01:23:28 PAGE 5   

 238          //--------------------------------------------------------------------------------------------------------
             ------------
 239          void pwm_init(PWM_CH pwmch, uint32 freq, uint16 duty)
 240          {
 241   1      
 242   1              uint16 match_temp;
 243   1              uint16 period_temp;
 244   1              uint16 freq_div = 0;
 245   1      
 246   1              P_SW2 |= 0x80;
 247   1      
 248   1              //GPIO∂Àø⁄≈‰÷√
 249   1              pwm_set_gpio(pwmch);
 250   1      
 251   1              freq_div = ((uint32)(sys_clk / freq)) >> 16;                            //∑÷∆µ
 252   1      
 253   1              period_temp = (sys_clk / freq) / (freq_div + 1) - 1;            //÷‹∆⁄ ±º‰
 254   1      
 255   1              match_temp = period_temp * ((float)duty / PWM_DUTY_MAX);        //’ºø’±»
 256   1      
 257   1              if (PWM5_P20 <= pwmch)                          //PWM5-8
 258   1              {
 259   2      
 260   2                      PWM2_ENO |= (1 << ((2 * ((pwmch >> 4) - 4))));                                  // πƒ‹ ‰≥ˆ
 261   2                      PWM2_PS |= ((pwmch & 0x03) << ((2 * ((pwmch >> 4) - 4))));              // ‰≥ˆΩ≈—°‘Ò
 262   2      
 263   2                      // ≈‰÷√Õ®µ¿ ‰≥ˆ πƒ‹∫Õº´–‘       
 264   2                      (*(unsigned char volatile xdata*)(PWM2_CCER1_ADDR + (((pwmch >> 4) - 4) >> 1))) |= (1 << (((pwmch >> 4) 
             -& 0x01) * 4));
 265   2      
 266   2                      //Õ®µ¿ƒ£ Ω≈‰÷√
 267   2                      (*(unsigned char volatile xdata*)(PWM2_CCMR1_ADDR + ((pwmch >> 4) - 4))) |= 0x06 << 4;  //
 268   2                      (*(unsigned char volatile xdata*)(PWM2_CCMR1_ADDR + ((pwmch >> 4) - 4))) |= 1 << 3;             //PWMƒ£ Ω2
 269   2      
 270   2                      //…Ë÷√÷‹∆⁄ ±º‰£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 271   2                      //PWM2_ARR = (uint16)period_temp;
 272   2                      PWM2_ARRH = period_temp >> 8;
 273   2                      PWM2_ARRL = period_temp;
 274   2                      //PWM2_ARR=2000;
 275   2      
 276   2                      //PWM‘§∑÷∆µ£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 277   2                      PWM2_PSCRH = freq_div >> 8;
 278   2                      PWM2_PSCRL = freq_div;
 279   2      
 280   2                      //…Ë÷√’ºø’±»£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 281   2                      (*(unsigned char volatile xdata*)(PWM2_CCR1_ADDR + 2 * ((pwmch >> 4) - 4))) = match_temp >> 8;
 282   2                      (*(unsigned char volatile xdata*)(PWM2_CCR1_ADDR + 2 * ((pwmch >> 4) - 4) + 1)) = match_temp;
 283   2                      
 284   2                      PWM2_BKR = 0x80;        // πƒ‹÷˜ ‰≥ˆ
 285   2                      PWM2_CR1 = 0x01;        //PWMø™ ºº∆ ±
 286   2              }
 287   1              else
 288   1              {
 289   2                      PWM1_ENO |= (1 << (pwmch & 0x01)) << ((pwmch >> 4) * 2);        // πƒ‹ ‰≥ˆ      
 290   2                      PWM1_PS |= ((pwmch & 0x07) >> 1) << ((pwmch >> 4) * 2);    // ‰≥ˆΩ≈—°‘Ò
 291   2      
 292   2      
 293   2                      // ≈‰÷√Õ®µ¿ ‰≥ˆ πƒ‹∫Õº´–‘
 294   2                      (*(unsigned char volatile xdata*)(PWM1_CCER1_ADDR + (pwmch >> 5))) |= (1 << ((pwmch & 0x01) * 2 + ((pwmc
             -h >> 4) & 0x01) * 0x04));
 295   2      
 296   2      
C51 COMPILER V9.60.0.0   PWM                                                               01/08/2021 01:23:28 PAGE 6   

 297   2                      (*(unsigned char volatile xdata*)(PWM1_CCMR1_ADDR + (pwmch >> 4))) |= 0x06 << 4;        
 298   2                      (*(unsigned char volatile xdata*)(PWM1_CCMR1_ADDR + (pwmch >> 4))) |= 1 << 3;           //PWMƒ£ Ω2
 299   2      
 300   2                      //…Ë÷√÷‹∆⁄ ±º‰£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 301   2                      //PWM1_ARR = period_temp;
 302   2                      PWM1_ARRH = period_temp >> 8;
 303   2                      PWM1_ARRL = period_temp;
 304   2      
 305   2                      //PWM‘§∑÷∆µ£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 306   2                      PWM1_PSCRH = freq_div >> 8;
 307   2                      PWM1_PSCRL = freq_div;
 308   2      
 309   2                      //…Ë÷√’ºø’±»£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 310   2                      (*(unsigned char volatile xdata*)(PWM1_CCR1_ADDR + 2 * (pwmch >> 4))) = match_temp >> 8;
 311   2                      (*(unsigned char volatile xdata*)(PWM1_CCR1_ADDR + 2 * (pwmch >> 4) + 1)) = match_temp;
 312   2      
 313   2                      PWM1_BKR = 0x80;        // πƒ‹÷˜ ‰≥ˆ
 314   2                      PWM1_CR1 = 0x01;        //PWMø™ ºº∆ ±
 315   2              }
 316   1      
 317   1              //P_SW2 &= 0x7F;
 318   1      
 319   1      }
 320          
 321          //--------------------------------------------------------------------------------------------------------
             ------------
 322          //  @brief      PWMµ˜’˚’ºø’±»
 323          //  @param      pwmch       PWM“˝Ω≈
 324          //  @param      duty        PWM’ºø’±»
 325          //  @return     void
 326          //  Sample usage:           pwm_duty(PWM0_P00, 5000);     //Õ®µ¿PWM0  “˝Ω≈P0.0  ’ºø’±»5000
 327          //                                                      
 328          //--------------------------------------------------------------------------------------------------------
             ------------
 329          void pwm_duty(PWM_CH pwmch, uint16 duty)
 330          {
 331   1              uint16 match_temp;
 332   1      
 333   1              //      P_SW2 |= 0x80;
 334   1              if (PWM5_P20 <= pwmch)                          //PWM5-8
 335   1              {
 336   2                      match_temp = PWM2_ARRH;
 337   2                      match_temp = match_temp << 8;
 338   2                      match_temp = match_temp + PWM2_ARRL;
 339   2                      match_temp = match_temp * ((float)duty / PWM_DUTY_MAX);                         //’ºø’±»
 340   2                      (*(unsigned char volatile xdata*)(PWM2_CCR1_ADDR + 2 * ((pwmch >> 4) - 4))) = match_temp >> 8;
 341   2                      (*(unsigned char volatile xdata*)(PWM2_CCR1_ADDR + 2 * ((pwmch >> 4) - 4) + 1)) = match_temp;
 342   2              }
 343   1              else
 344   1              {
 345   2                      match_temp = PWM1_ARRH;
 346   2                      match_temp = match_temp << 8;
 347   2                      match_temp = match_temp + PWM1_ARRL;
 348   2                      match_temp = match_temp *((float)duty / PWM_DUTY_MAX);                          //’ºø’±»
 349   2                      (*(unsigned char volatile xdata*)(PWM1_CCR1_ADDR + 2 * (pwmch >> 4))) = match_temp >> 8;
 350   2                      (*(unsigned char volatile xdata*)(PWM1_CCR1_ADDR + 2 * (pwmch >> 4) + 1)) = match_temp;
 351   2              }
 352   1              //      P_SW2 &= ~0x80;
 353   1      
 354   1      }
 355          
 356          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.60.0.0   PWM                                                               01/08/2021 01:23:28 PAGE 7   

             ------------
 357          //  @brief      PWMµ˜’˚∆µ¬ ∫Õ’ºø’±»
 358          //  @param      pwmch       PWMÕ®µ¿
 359          //  @param      freq        PWM∆µ¬ 
 360          //  @param      duty        PWM’ºø’±»
 361          //  @return     void
 362          //  Sample usage:           pwm_freq(PWM0_P00, 50, 5000);     //Õ®µ¿PWM0  “˝Ω≈P0.0  ∆µ¬ 50  ’ºø’±»5000
 363          //--------------------------------------------------------------------------------------------------------
             ------------
 364          void pwm_freq_duty(PWM_CH pwmch, uint16 freq, uint16 duty)
 365          {
 366   1              uint16 match_temp;
 367   1              uint16 period_temp;
 368   1              uint16 freq_div = 0;
 369   1      
 370   1              freq_div = (sys_clk / freq) >> 15;                                                              //∑÷∆µ
 371   1              period_temp = sys_clk / freq / (freq_div + 1);                                  //∆µ¬ 
 372   1      
 373   1              //match_temp = period_temp * duty;
 374   1              //match_temp = match_temp / PWM_DUTY_MAX;
 375   1              match_temp = period_temp * ((float)duty / PWM_DUTY_MAX);        //’ºø’±»
 376   1      
 377   1      //      P_SW2 |= 0x80;
 378   1              if (PWM5_P20 <= pwmch)                          //PWM5-8
 379   1              {
 380   2                      //÷‹∆⁄£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 381   2                      //PWM2_ARR = (uint16)period_temp;
 382   2                      PWM2_ARRH = period_temp >> 8;
 383   2                      PWM2_ARRL = period_temp;
 384   2                      //PWM‘§∑÷∆µ£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 385   2                      PWM2_PSCRH = freq_div>>8;
 386   2                      PWM2_PSCRL = freq_div;
 387   2                      //’ºø’±»£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 388   2                      //(*(unsigned int volatile xdata*)(PWM2_CCR1_ADDR + 2 * ((pwmch >> 4) - 4))) = match_temp;
 389   2                      (*(unsigned char volatile xdata*)(PWM2_CCR1_ADDR + 2 * ((pwmch >> 4) - 4))) = match_temp >> 8;
 390   2                      (*(unsigned char volatile xdata*)(PWM2_CCR1_ADDR + 2 * ((pwmch >> 4) - 4) + 1)) = match_temp;
 391   2                      
 392   2              }
 393   1              else
 394   1              {
 395   2                      //÷‹∆⁄£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 396   2                      //PWM2_ARR = (uint16)period_temp;
 397   2                      PWM1_ARRH = period_temp >> 8;
 398   2                      PWM1_ARRL = period_temp;
 399   2                      //PWM‘§∑÷∆µ£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 400   2                      PWM1_PSCR = freq_div;
 401   2                      //’ºø’±»£®∏ﬂ◊÷Ω⁄œ»–¥»Î£©
 402   2                      //(*(unsigned int volatile xdata*)(PWM1_CCR1_ADDR + 2 * (pwmch >> 4))) = match_temp;
 403   2                      (*(unsigned char volatile xdata*)(PWM1_CCR1_ADDR + 2 * (pwmch >> 4))) = match_temp >> 8;
 404   2                      (*(unsigned char volatile xdata*)(PWM1_CCR1_ADDR + 2 * (pwmch >> 4) + 1)) = match_temp;
 405   2                      
 406   2              }
 407   1              //      P_SW2 &= ~0x80;
 408   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1827    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      25
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.60.0.0   PWM                                                               01/08/2021 01:23:28 PAGE 8   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
