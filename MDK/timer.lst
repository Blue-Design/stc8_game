C51 COMPILER V9.60.0.0   TIMER                                                             01/08/2021 01:23:24 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Out_File\timer.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\Libraries\timer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Device;..\
                    -Libraries) DEBUG OBJECTEXTEND PRINT(.\timer.lst) OBJECT(.\Out_File\timer.obj)

line level    source

   1          #include "timer.h"
   2          
   3          //========================================================================
   4          // 函数: void   Timer0_init(void)
   5          // 描述: timer0初始化函数.
   6          // 参数: none.
   7          // 返回: none.
   8          // 版本: V1.0, 2015-1-12
   9          //========================================================================
  10          void    Timer0_init(void)
  11          {
  12   1              TR0 = 0;    //停止计数
  13   1      
  14   1          #if (Timer0_Reload < 64)    // 如果用户设置值不合适， 则不启动定时器
                      #error "Timer0设置的中断过快!"
              
                  #elif ((Timer0_Reload/12) < 65536UL)    // 如果用户设置值不合适， 则不启动定时器
  18   1              ET0 = 1;    //允许中断
  19   1          //  PT0 = 1;    //高优先级中断
  20   1              TMOD &= ~0x03;
  21   1              TMOD |= 0;  //工作模式, 0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装, 3: 16位自动重装, 不可屏
             -蔽中断
  22   1          //  TMOD |=  0x04;  //对外计数或分频
  23   1              TMOD &= ~0x04;  //定时
  24   1          //  INT_CLKO |=  0x01;  //输出时钟
  25   1              INTCLKO &= ~0x01;  //不输出时钟
  26   1      
  27   1              #if (Timer0_Reload < 65536UL)
  28   1                  AUXR |=  0x80;  //1T mode
  29   1                  TH0 = (uint8)((65536UL - Timer0_Reload) / 256);
  30   1                  TL0 = (uint8)((65536UL - Timer0_Reload) % 256);
  31   1              #else
                          AUXR &= ~0x80;  //12T mode
                          TH0 = (uint8)((65536UL - Timer0_Reload/12) / 256);
                          TL0 = (uint8)((65536UL - Timer0_Reload/12) % 256);
                      #endif
  36   1      
  37   1              TR0 = 1;    //开始运行
  38   1      
  39   1          #else
                      #error "Timer0设置的中断过慢!"
                  #endif
  42   1      }
  43          
  44          //========================================================================
  45          // 函数: void   Timer1_init(void)
  46          // 描述: timer1初始化函数.
  47          // 参数: none.
  48          // 返回: none.
  49          // 版本: V1.0, 2015-1-12
  50          //========================================================================
  51          void    Timer1_init(void)
  52          {
  53   1              TR1 = 0;    //停止计数
C51 COMPILER V9.60.0.0   TIMER                                                             01/08/2021 01:23:24 PAGE 2   

  54   1      
  55   1          #if (Timer1_Reload < 64)    // 如果用户设置值不合适， 则不启动定时器
                      #error "Timer1设置的中断过快!"
              
                  #elif ((Timer1_Reload/12) < 65536UL)    // 如果用户设置值不合适， 则不启动定时器
  59   1              ET1 = 1;    //允许中断
  60   1          //  PT1 = 1;    //高优先级中断
  61   1              TMOD &= ~0x30;
  62   1              TMOD |= (0 << 4);   //工作模式, 0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装
  63   1          //  TMOD |=  0x40;  //对外计数或分频
  64   1              TMOD &= ~0x40;  //定时
  65   1          //  INT_CLKO |=  0x02;  //输出时钟
  66   1              INTCLKO &= ~0x02;  //不输出时钟
  67   1      
  68   1              #if (Timer1_Reload < 65536UL)
  69   1                  AUXR |=  0x40;  //1T mode
  70   1                  TH1 = (uint8)((65536UL - Timer1_Reload) / 256);
  71   1                  TL1 = (uint8)((65536UL - Timer1_Reload) % 256);
  72   1              #else
                          AUXR &= ~0x40;  //12T mode
                          TH1 = (uint8)((65536UL - Timer1_Reload/12) / 256);
                          TL1 = (uint8)((65536UL - Timer1_Reload/12) % 256);
                      #endif
  77   1      
  78   1              TR1 = 1;    //开始运行
  79   1      
  80   1          #else
                      #error "Timer1设置的中断过慢!"
                  #endif
  83   1      }
  84          
  85          //========================================================================
  86          // 函数: void   Timer2_init(void)
  87          // 描述: timer2初始化函数.
  88          // 参数: none.
  89          // 返回: none.
  90          // 版本: V1.0, 2015-1-12
  91          //========================================================================
  92          void    Timer2_init(void)
  93          {
  94   1              AUXR &= ~0x1c;      //停止计数, 定时模式, 12T模式
  95   1      
  96   1          #if (Timer2_Reload < 64)    // 如果用户设置值不合适， 则不启动定时器
                      #error "Timer2设置的中断过快!"
              
                  #elif ((Timer2_Reload/12) < 65536UL)    // 如果用户设置值不合适， 则不启动定时器
 100   1          //  IE2  &= ~ET2;       //禁止中断
 101   1              IE2  |=  ET2;       //允许中断
 102   1          //  INT_CLKO |=  0x04;  //输出时钟
 103   1              INTCLKO &= ~0x04;  //不输出时钟
 104   1      
 105   1              #if (Timer2_Reload < 65536UL)
 106   1                  AUXR |=  (1<<2);    //1T mode
 107   1                  T2H = (uint8)((65536UL - Timer2_Reload) / 256);
 108   1                  T2L = (uint8)((65536UL - Timer2_Reload) % 256);
 109   1              #else
                          T2H = (uint8)((65536UL - Timer2_Reload/12) / 256);
                          T2L = (uint8)((65536UL - Timer2_Reload/12) % 256);
                      #endif
 113   1      
 114   1                  AUXR |=  (1<<4);    //开始运行
 115   1      
C51 COMPILER V9.60.0.0   TIMER                                                             01/08/2021 01:23:24 PAGE 3   

 116   1          #else
                      #error "Timer2设置的中断过慢!"
                  #endif
 119   1      }
 120          
 121          //========================================================================
 122          // 函数: void   Timer3_init(void)
 123          // 描述: timer3初始化函数.
 124          // 参数: none.
 125          // 返回: none.
 126          // 版本: V1.0, 2015-1-12
 127          //========================================================================
 128          void    Timer3_init(void)
 129          {
 130   1              T4T3M &= ~0x0f;     //停止计数, 定时模式, 12T模式, 不输出时钟
 131   1      
 132   1          #if (Timer3_Reload < 64)    // 如果用户设置值不合适， 则不启动定时器
                      #error "Timer3设置的中断过快!"
              
                  #elif ((Timer3_Reload/12) < 65536UL)    // 如果用户设置值不合适， 则不启动定时器
 136   1          //  IE2  &= ~ET3;       //禁止中断
 137   1              IE2  |=  ET3;       //允许中断
 138   1          //  T4T3M |=  0x01;     //输出时钟
 139   1          //  T4T3M &= ~0x01;     //不输出时钟
 140   1      
 141   1              #if (Timer3_Reload < 65536UL)
 142   1                  T4T3M |=  (1<<1);    //1T mode
 143   1                  T3H = (uint8)((65536UL - Timer3_Reload) / 256);
 144   1                  T3L = (uint8)((65536UL - Timer3_Reload) % 256);
 145   1              #else
                          T3H = (uint8)((65536UL - Timer3_Reload/12) / 256);
                          T3L = (uint8)((65536UL - Timer3_Reload/12) % 256);
                      #endif
 149   1      
 150   1                  T4T3M |=  (1<<3);    //开始运行
 151   1      
 152   1          #else
                      #error "Timer3设置的中断过慢!"
                  #endif
 155   1      }
 156          
 157          //========================================================================
 158          // 函数: void   Timer4_init(void)
 159          // 描述: timer4初始化函数.
 160          // 参数: none.
 161          // 返回: none.
 162          // 版本: V1.0, 2015-1-12
 163          //========================================================================
 164          void    Timer4_init(void)
 165          {
 166   1              T4T3M &= ~0xf0;     //停止计数, 定时模式, 12T模式, 不输出时钟
 167   1      
 168   1          #if (Timer4_Reload < 64)    // 如果用户设置值不合适， 则不启动定时器
                      #error "Timer4设置的中断过快!"
              
                  #elif ((Timer4_Reload/12) < 65536UL)    // 如果用户设置值不合适， 则不启动定时器
 172   1          //  IE2  &= ~ET4;       //禁止中断
 173   1              IE2  |=  ET4;       //允许中断
 174   1          //  T4T3M |=  0x10;     //输出时钟
 175   1          //  T4T3M &= ~0x10;     //不输出时钟
 176   1      
 177   1              #if (Timer4_Reload < 65536UL)
C51 COMPILER V9.60.0.0   TIMER                                                             01/08/2021 01:23:24 PAGE 4   

 178   1                  T4T3M |=  (1<<5);    //1T mode
 179   1                  T4H = (uint8)((65536UL - Timer4_Reload) / 256);
 180   1                  T4L = (uint8)((65536UL - Timer4_Reload) % 256);
 181   1              #else
                          T4H = (uint8)((65536UL - Timer4_Reload/12) / 256);
                          T4L = (uint8)((65536UL - Timer4_Reload/12) % 256);
                      #endif
 185   1      
 186   1                  T4T3M |=  (1<<7);    //开始运行
 187   1      
 188   1          #else
                      #error "Timer4设置的中断过慢!"
                  #endif
 191   1      }
 192          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    110    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
